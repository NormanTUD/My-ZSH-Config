#!/bin/bash

set -e

function red_text {
	echo -e "\e[101m$1\e[0m"
}

if ! command -v sudo >/dev/null 2>/dev/null; then
	red_text "sudo not found. Please install it first."
	exit 
fi

if ! command -v apt >/dev/null 2>/dev/null; then
	red_text "apt not found. This only works on debian-based systems."
	exit 
fi

function green_text {
	echo -e "\e[46m\e[103m$1\e[0m"
}

APT_UPDATE_DONE=0

function apt_install {
	if [[ $APT_UPDATE_DONE -eq 0 ]]; then
		green_text "Doing apt-get update"
		sudo apt-get update >/dev/null
		APT_UPDATE_DONE=1
	fi

	total_packages=$#
	installed=0

	for package in "$@"; do
		installed=$((installed + 1))
		progress=$((installed * 100 / total_packages))

		if dpkg -s "$package" &>/dev/null; then
			green_text "[$progress%] $package is already installed. Skipping..."
		else
			green_text "[$progress%] Installing $package..."
			sudo apt-get -y install "$package" >/dev/null
		fi
	done
}

green_text "My-ZSH-Config installer for Debian based systems"

HASROOTRIGHTS=0
if (whiptail --title "Do you have sudo rights on this machine?" --yesno "If not, no new programs can be installed automatically" 8 78); then
	HASROOTRIGHTS=1

	sudo groupadd docker 2>/dev/null >/dev/null || true

	apt_install whiptail curl zsh vim git exa hstr

	if command -v hstr &> /dev/null; then
		hstr --show-configuration >> ~/.zshrc
	fi
else
	red_text "Without sudo rights, you cannot install stuff. I will try to continue anyway for the programs that I can find"
fi

if command -v zsh &> /dev/null; then
	if [ -f ~/.zshrc ]; then
		mv ~/.zshrc ~/.zshrc_ORIGINAL
		green_text "Moved ~/.zshrc to ~/.zshrc_ORIGINAL"
	fi

	if [ -d ~/.zsh ]; then
		mv ~/.zsh ~/.zsh_ORIGINAL
		green_text "Moved ~/.zsh to ~/.zsh_ORIGINAL"
	fi

	cp zshrc ~/.zshrc
	cp -r oh-my-zsh ~/.oh-my-zsh
	cp -r oh-my-zsh/plugins/zsh-syntax-highlighting/highlighters ~/.oh-my-zsh/plugins/zsh-syntax-highlighting/
	if command -v git &> /dev/null; then
		if [[ ! -d $HOME/.oh-my-zsh/plugins/zsh-autosuggestions ]]; then
			git clone https://github.com/zsh-users/zsh-autosuggestions.git $HOME/.oh-my-zsh/plugins/zsh-autosuggestions
		fi
	else
		red_text "Without git, autosuggestions cannot be cloned"
	fi

	cp -r p10k.zsh ~/.p10k.zsh
	cp -r powerlevel10k/ ~/.powerlevel10k/

	if [[ $HASROOTRIGHTS -eq "1" ]]; then
		if (whiptail --title "Set ZSH as default shell?" --yesno "This needs sudo rights." 8 78); then
			green_text "Enter your password for setting zsh as default shell"
			chsh -s /bin/zsh
		fi
	fi
else
	red_text "ZSH does not seem to be installed correctly."
fi

if command -v apt &> /dev/null; then
	if (whiptail --title "Do you want to install what I deem as useful packages?" --yesno "This installs some useful packages." 8 78); then
		sudo dpkg --add-architecture i386
		apt_install arp-scan \
			aptitude \
			phpmd \
			cmake \
			make \
			evince \
			ffmpeg \
			flatpak \
			inkscape \
			kcolorchooser \
			kdeconnect \
			kompare \
			libsdl2-dev \
			locate \
			php \
			php-mbstring \
			plotutils \
			pv \
			gnuplot \
			python3 python3-pip python3-venv python3-rich \
			simplescreenrecorder \
			speedcrunch \
			uuid-runtime \
			xdotool \
			xprintidle \
			etckeeper \
			sqlite3 \
			pdf2svg \
			kdenlive \
			node-npm \
			net-tools \
			wine wine32:i386 \
			gdebi lame vorbis-tools flac libopus0 opus-tools k3b \
			fonts-powerline \
			golang-go \
			texlive-full \
			texlive-extra-utils \
			thunderbird
		go install github.com/claudiodangelis/qrcp@latest
		curl -fsSL https://get.docker.com -o get-docker.sh | bash
		sudo usermod -aG docker $USER
	fi
fi

if command -v vim &> /dev/null; then
	if (whiptail --title "Do you want to install my vimrc files too?" --yesno "This installs a sane vim environment." 8 78); then
		if [ -f ~/.vimrc ]; then
			mv ~/.vimrc ~/.vimrc_ORIGINAL
			green_text "Moved ~/.vimrc to ~/.vimrc_ORIGINAL"
		fi

		cp -r vim_runtime ~/.vim_runtime
		cp -r vimrc ~/.vimrc

		mkdir -p ~/.vim/pack/tpope/start
		cd ~/.vim/pack/tpope/start
		git clone https://tpope.io/vim/surround.git
		vim -u NONE -c "helptags surround/doc" -c q

		git clone https://github.com/vim-airline/vim-airline ~/.vim/pack/dist/start/vim-airline
	fi
else
	red_text "vim does not seem to be installed"
fi
